{"version":3,"sources":["webpack:///./node_modules/@angular/material/checkbox/typings/index.d.ts.MatCheckbox.html","webpack:///./node_modules/@angular/material/radio/typings/index.d.ts.MatRadioButton.html","webpack:///./node_modules/ng2-file-upload/file-upload/file-drop.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-item.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-like-object.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-select.directive.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-type.class.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-upload.module.js","webpack:///./node_modules/ng2-file-upload/file-upload/file-uploader.class.js","webpack:///./node_modules/ng2-file-upload/index.js","webpack:///./src/app/dashboard/music-upload/album-upload/album-upload.component.html","webpack:///./src/app/dashboard/music-upload/album-upload/album-upload.component.ts","webpack:///./src/app/dashboard/music-upload/single-upload/single-upload.component.html","webpack:///./src/app/dashboard/music-upload/single-upload/single-upload.component.ts","webpack:///./src/app/dashboard/music-upload/upload-platforms/distribution-platforms.ts","webpack:///./src/app/dashboard/mymusic/album-details/album-details.component.html","webpack:///./src/app/dashboard/mymusic/album-details/album-details.component.ts","webpack:///./src/app/dashboard/mymusic/albums/albums.component.html","webpack:///./src/app/dashboard/mymusic/albums/albums.component.ts","webpack:///./src/app/dashboard/mymusic/mymusic.module.ts","webpack:///./src/app/dashboard/mymusic/songs-details/songs-details.component.html","webpack:///./src/app/dashboard/mymusic/songs-details/songs-details.component.ts","webpack:///./src/app/dashboard/mymusic/songs/songs.component.html","webpack:///./src/app/dashboard/mymusic/songs/songs.component.ts","webpack:///./src/app/dashboard/mymusic/verified-singles/verified-singles.component.html","webpack:///./src/app/dashboard/mymusic/verified-singles/verified-singles.component.ts","webpack:///./src/app/services/uploads.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0QAAA,+KAC0B,4NAIhB,2fAOkC,YADd;;wBACnB;MAAC;;wBAA+B;MAPjC,wBAOkC,+1BAIA,GAA5C,wEAA2C,MAAC,qLAExC,KAAY,sJACb,KAAM,4JAAqC,uQAED,sPAEvB,KAAM,2JACf,KAAkB,0OAEnB,YADY;;wBACb;MAFoB,2YAEnB,wJAA2B,mFAAM,KAC3C,0DAAY,iDAZe,qBAA0B,EAAjD,mBAAsB,EAC5B,kCAA2C,GAF1B,oBACZ,sBAFkC,yEACvB,GAF4B,YAIA,EADf,UAA0B,EAAjD,UAAsB,EAC5B,UAA2C,EAF1B,UACZ,EAFkC,UACvB,mDAdT,mBAAoB,UAA3B,YAC0B,EADnB,SAAoB,GAET,sJAGT,uBAJiB,YAIhB,EAHQ,SAGT,GACgC,mBAAc,UAAC,mBAAqB,WAAC,mBAAmB,UACjG,mBAAoB,QAAC,mBAAqB,WAAC,mBAC9B,OAAC,mBAAqB,WAAC,mBAC3B,gBAAC,uCAAqC,GAAC,oBACd,iBAAC,oBACN,oBANnB,eAC+B,SAAc,EAAC,SAAqB,EAAC,SAAmB,EACjG,SAAoB,EAAC,SAAqB,EAAC,SAC9B,EAAC,SAAqB,EAAC,SAC3B,EAAC,UAAqC,EAAC,UACd,EAAC,UACN,CACe,iHAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4LChB5C,2KACsB,4JACd,+JACH,KAAM,0JACL,KAAM,o1BAGkB,GADI,wEACL,MAAC,kLACE,KAAY,0cAQzC,YAFuC;;wBACvB;MAAC;;wBAClB;MAR0C,wBAQzC,KAAM,6LAEH,uJAA2B,mFAAM,KAAO,0DACvC,iDAdqE,oBAClE,EAAC,kBAAsB,EAAC,iCACL,GAFK,mBAAyC,sBAApE,wEAA0B,GADrB,YAGkB,EAF8C,SAClE,EAAC,SAAsB,EAAC,SACL,EAFK,SAAyC,EAApE,SAA0B,mDAL1B,mBAAoB,UAA3B,YACsB,EADf,SAAoB,GAIf,4GAGkB,GAGb,mBAAc,UAAC,mBAAmB,UAAC,mBACpC,WAAC,oBAAqB,WAAC,oBAC9B,OAAC,oBAAqB,WAAC,oBACpB,YAAC,oBAAuC,iBACpD,oBAAyC,kBANG,YAQzC,EANc,SAAc,EAAC,SAAmB,EAAC,SACpC,EAAC,UAAqB,EAAC,UAC9B,EAAC,UAAqB,EAAC,UACpB,EAAC,UAAuC,EACpD,UAAyC,GAEK,+CAEzC,GAFI,aAEH,EAFwC,UAEzC;;;;;;;;;;;;;;;;;;;AClBQ;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4BAA4B;AAClD;AACA;AACA;;;;;;;;;;;;;AC/Ga;AACb,+BAA+B,mBAAO,CAAC,sGAA0B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC7Ha;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,8BAA8B;AACpD;AACA;AACA;;;;;;;;;;;;;ACxDa;AACblKa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA,eAAe,mBAAO,CAAC,uEAAiB;AACxC,aAAa,mBAAO,CAAC,iEAAe;AACpC,4BAA4B,mBAAO,CAAC,gGAAuB;AAC3D,8BAA8B,mBAAO,CAAC,oGAAyB;AAC/D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;ACvBa;AACb,aAAa,mBAAO,CAAC,iEAAe;AACpC,+BAA+B,mBAAO,CAAC,sGAA0B;AACjE,wBAAwB,mBAAO,CAAC,wFAAmB;AACnD,wBAAwB,mBAAO,CAAC,wFAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,mBAAmB,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qBAAqB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,0BAA0B,EAAE;AACnG;AACA;AACA;AACA,mCAAmC,mCAAmC,EAAE;AACxE;AACA;AACA;AACA;AACA,mCAAmC,sBAAsB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,yBAAyB,EAAE;AAC7E;AACA;AACA;AACA,qCAAqC,4CAA4C,EAAE;AACnF,2CAA2C,kCAAkC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,gEAAgE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,WAAW;AACvF,uDAAuD,WAAW;AAClE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA,+CAA+C,gBAAgB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,yCAAyC,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AAC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","file":"mymusic-mymusic-module-ngfactory.js","sourcesContent":["<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label><div class=\"mat-checkbox-inner-container\" [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\"><input #input class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\" [id]=\"inputId\" [required]=\"required\" [checked]=\"checked\" [attr.value]=\"value\" [disabled]=\"disabled\" [attr.name]=\"name\" [tabIndex]=\"tabIndex\" [indeterminate]=\"indeterminate\" [attr.aria-label]=\"ariaLabel || null\" [attr.aria-labelledby]=\"ariaLabelledby\" [attr.aria-checked]=\"_getAriaChecked()\" (change)=\"_onInteractionEvent($event)\" (click)=\"_onInputClick($event)\"><div matRipple class=\"mat-checkbox-ripple\" [matRippleTrigger]=\"label\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleRadius]=\"20\" [matRippleCentered]=\"true\" [matRippleAnimation]=\"{enterDuration: 150}\"><div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div></div><div class=\"mat-checkbox-frame\"></div><div class=\"mat-checkbox-background\"><svg version=\"1.1\" focusable=\"false\" class=\"mat-checkbox-checkmark\" viewBox=\"0 0 24 24\" xml:space=\"preserve\"><path class=\"mat-checkbox-checkmark-path\" fill=\"none\" stroke=\"white\" d=\"M4.1,12.7 9,17.6 20.3,6.3\"/></svg><div class=\"mat-checkbox-mixedmark\"></div></div></div><span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></span></label>","<label [attr.for]=\"inputId\" class=\"mat-radio-label\" #label><div class=\"mat-radio-container\"><div class=\"mat-radio-outer-circle\"></div><div class=\"mat-radio-inner-circle\"></div><div mat-ripple class=\"mat-radio-ripple\" [matRippleTrigger]=\"label\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"true\" [matRippleRadius]=\"20\" [matRippleAnimation]=\"{enterDuration: 150}\"><div class=\"mat-ripple-element mat-radio-persistent-ripple\"></div></div><input #input class=\"mat-radio-input cdk-visually-hidden\" type=\"radio\" [id]=\"inputId\" [checked]=\"checked\" [disabled]=\"disabled\" [tabIndex]=\"tabIndex\" [attr.name]=\"name\" [required]=\"required\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" [attr.aria-describedby]=\"ariaDescribedby\" (change)=\"_onInputChange($event)\" (click)=\"_onInputClick($event)\"></div><div class=\"mat-radio-label-content\" [class.mat-radio-label-before]=\"labelPosition == 'before'\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></div></label>","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\nvar FileDropDirective = (function () {\n    function FileDropDirective(element) {\n        this.fileOver = new core_1.EventEmitter();\n        this.onFileDrop = new core_1.EventEmitter();\n        this.element = element;\n    }\n    FileDropDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileDropDirective.prototype.getFilters = function () {\n        return {};\n    };\n    FileDropDirective.prototype.onDrop = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    };\n    FileDropDirective.prototype.onDragOver = function (event) {\n        var transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    };\n    FileDropDirective.prototype.onDragLeave = function (event) {\n        if (this.element) {\n            if (event.currentTarget === this.element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    };\n    FileDropDirective.prototype._getTransfer = function (event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    };\n    FileDropDirective.prototype._preventAndStop = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    FileDropDirective.prototype._haveFiles = function (types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    };\n    return FileDropDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\n], FileDropDirective.prototype, \"uploader\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileDropDirective.prototype, \"fileOver\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileDropDirective.prototype, \"onFileDrop\", void 0);\n__decorate([\n    core_1.HostListener('drop', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], FileDropDirective.prototype, \"onDrop\", null);\n__decorate([\n    core_1.HostListener('dragover', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", void 0)\n], FileDropDirective.prototype, \"onDragOver\", null);\n__decorate([\n    core_1.HostListener('dragleave', ['$event']),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Object)\n], FileDropDirective.prototype, \"onDragLeave\", null);\nFileDropDirective = __decorate([\n    core_1.Directive({ selector: '[ng2FileDrop]' }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], FileDropDirective);\nexports.FileDropDirective = FileDropDirective;\n","\"use strict\";\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\nvar FileItem = (function () {\n    function FileItem(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new file_like_object_class_1.FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    FileItem.prototype.upload = function () {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    };\n    FileItem.prototype.cancel = function () {\n        this.uploader.cancelItem(this);\n    };\n    FileItem.prototype.remove = function () {\n        this.uploader.removeFromQueue(this);\n    };\n    FileItem.prototype.onBeforeUpload = function () {\n        return void 0;\n    };\n    FileItem.prototype.onBuildForm = function (form) {\n        return { form: form };\n    };\n    FileItem.prototype.onProgress = function (progress) {\n        return { progress: progress };\n    };\n    FileItem.prototype.onSuccess = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onError = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onCancel = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype.onComplete = function (response, status, headers) {\n        return { response: response, status: status, headers: headers };\n    };\n    FileItem.prototype._onBeforeUpload = function () {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    };\n    FileItem.prototype._onBuildForm = function (form) {\n        this.onBuildForm(form);\n    };\n    FileItem.prototype._onProgress = function (progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    };\n    FileItem.prototype._onSuccess = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    };\n    FileItem.prototype._onError = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    };\n    FileItem.prototype._onCancel = function (response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    };\n    FileItem.prototype._onComplete = function (response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    };\n    FileItem.prototype._prepareToUploading = function () {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    };\n    return FileItem;\n}());\nexports.FileItem = FileItem;\n","\"use strict\";\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nvar FileLikeObject = (function () {\n    function FileLikeObject(fileOrInput) {\n        this.rawFile = fileOrInput;\n        var isInput = isElement(fileOrInput);\n        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        var method = '_createFrom' + postfix;\n        this[method](fakePathOrObject);\n    }\n    FileLikeObject.prototype._createFromFakePath = function (path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    };\n    FileLikeObject.prototype._createFromObject = function (object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    };\n    return FileLikeObject;\n}());\nexports.FileLikeObject = FileLikeObject;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar file_uploader_class_1 = require(\"./file-uploader.class\");\nvar FileSelectDirective = (function () {\n    function FileSelectDirective(element) {\n        this.onFileSelected = new core_1.EventEmitter();\n        this.element = element;\n    }\n    FileSelectDirective.prototype.getOptions = function () {\n        return this.uploader.options;\n    };\n    FileSelectDirective.prototype.getFilters = function () {\n        return {};\n    };\n    FileSelectDirective.prototype.isEmptyAfterSelection = function () {\n        return !!this.element.nativeElement.attributes.multiple;\n    };\n    FileSelectDirective.prototype.onChange = function () {\n        var files = this.element.nativeElement.files;\n        var options = this.getOptions();\n        var filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    };\n    return FileSelectDirective;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", file_uploader_class_1.FileUploader)\n], FileSelectDirective.prototype, \"uploader\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], FileSelectDirective.prototype, \"onFileSelected\", void 0);\n__decorate([\n    core_1.HostListener('change'),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Object)\n], FileSelectDirective.prototype, \"onChange\", null);\nFileSelectDirective = __decorate([\n    core_1.Directive({ selector: '[ng2FileSelect]' }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], FileSelectDirective);\nexports.FileSelectDirective = FileSelectDirective;\n","\"use strict\";\nvar FileType = (function () {\n    function FileType() {\n    }\n    FileType.getMimeClass = function (file) {\n        var mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    };\n    FileType.fileTypeDetection = function (inputFilename) {\n        var types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        var chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        var extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    };\n    return FileType;\n}());\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream'\n];\nexports.FileType = FileType;\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar common_1 = require(\"@angular/common\");\nvar core_1 = require(\"@angular/core\");\nvar file_drop_directive_1 = require(\"./file-drop.directive\");\nvar file_select_directive_1 = require(\"./file-select.directive\");\nvar FileUploadModule = (function () {\n    function FileUploadModule() {\n    }\n    return FileUploadModule;\n}());\nFileUploadModule = __decorate([\n    core_1.NgModule({\n        imports: [common_1.CommonModule],\n        declarations: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective],\n        exports: [file_drop_directive_1.FileDropDirective, file_select_directive_1.FileSelectDirective]\n    })\n], FileUploadModule);\nexports.FileUploadModule = FileUploadModule;\n","\"use strict\";\nvar core_1 = require(\"@angular/core\");\nvar file_like_object_class_1 = require(\"./file-like-object.class\");\nvar file_item_class_1 = require(\"./file-item.class\");\nvar file_type_class_1 = require(\"./file-type.class\");\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\nvar FileUploader = (function () {\n    function FileUploader(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: function (item) { return item._file; },\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new core_1.EventEmitter();\n    }\n    FileUploader.prototype.setOptions = function (options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (var i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    };\n    FileUploader.prototype.addToQueue = function (files, options, filters) {\n        var _this = this;\n        var list = [];\n        for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {\n            var file = files_1[_i];\n            list.push(file);\n        }\n        var arrayOfFilters = this._getFilters(filters);\n        var count = this.queue.length;\n        var addedFileItems = [];\n        list.map(function (some) {\n            if (!options) {\n                options = _this.options;\n            }\n            var temp = new file_like_object_class_1.FileLikeObject(some);\n            if (_this._isValidFile(temp, arrayOfFilters, options)) {\n                var fileItem = new file_item_class_1.FileItem(_this, some, options);\n                addedFileItems.push(fileItem);\n                _this.queue.push(fileItem);\n                _this._onAfterAddingFile(fileItem);\n            }\n            else {\n                var filter = arrayOfFilters[_this._failFilterIndex];\n                _this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        });\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    };\n    FileUploader.prototype.removeFromQueue = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    };\n    FileUploader.prototype.clearQueue = function () {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    };\n    FileUploader.prototype.uploadItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        this[transport](item);\n    };\n    FileUploader.prototype.cancelItem = function (value) {\n        var index = this.getIndexOfItem(value);\n        var item = this.queue[index];\n        var prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    };\n    FileUploader.prototype.uploadAll = function () {\n        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\n        if (!items.length) {\n            return;\n        }\n        items.map(function (item) { return item._prepareToUploading(); });\n        items[0].upload();\n    };\n    FileUploader.prototype.cancelAll = function () {\n        var items = this.getNotUploadedItems();\n        items.map(function (item) { return item.cancel(); });\n    };\n    FileUploader.prototype.isFile = function (value) {\n        return isFile(value);\n    };\n    FileUploader.prototype.isFileLikeObject = function (value) {\n        return value instanceof file_like_object_class_1.FileLikeObject;\n    };\n    FileUploader.prototype.getIndexOfItem = function (value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    };\n    FileUploader.prototype.getNotUploadedItems = function () {\n        return this.queue.filter(function (item) { return !item.isUploaded; });\n    };\n    FileUploader.prototype.getReadyItems = function () {\n        return this.queue\n            .filter(function (item) { return (item.isReady && !item.isUploading); })\n            .sort(function (item1, item2) { return item1.index - item2.index; });\n    };\n    FileUploader.prototype.destroy = function () {\n        return void 0;\n    };\n    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\n        return { fileItems: fileItems };\n    };\n    FileUploader.prototype.onBuildItemForm = function (fileItem, form) {\n        return { fileItem: fileItem, form: form };\n    };\n    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\n        return { item: item, filter: filter, options: options };\n    };\n    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\n        return { fileItem: fileItem };\n    };\n    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\n        return { fileItem: fileItem, progress: progress };\n    };\n    FileUploader.prototype.onProgressAll = function (progress) {\n        return { progress: progress };\n    };\n    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\n        return { item: item, response: response, status: status, headers: headers };\n    };\n    FileUploader.prototype.onCompleteAll = function () {\n        return void 0;\n    };\n    FileUploader.prototype._mimeTypeFilter = function (item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    };\n    FileUploader.prototype._fileSizeFilter = function (item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    };\n    FileUploader.prototype._fileTypeFilter = function (item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(file_type_class_1.FileType.getMimeClass(item)) === -1);\n    };\n    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    };\n    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        var nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    };\n    FileUploader.prototype._headersGetter = function (parsedHeaders) {\n        return function (name) {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        };\n    };\n    FileUploader.prototype._xhrTransport = function (item) {\n        var _this = this;\n        var that = this;\n        var xhr = item._xhr = new XMLHttpRequest();\n        var sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            var appendFile = function () { return sendable.append(item.alias, item._file, item.file.name); };\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach(function (key) {\n                    var paramVal = _this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                });\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = function (event) {\n            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            _this._onProgressItem(item, progress);\n        };\n        xhr.onload = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            var method = '_on' + gist + 'Item';\n            _this[method](item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onerror = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onErrorItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.onabort = function () {\n            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n            var response = _this._transformResponse(xhr.response, headers);\n            _this._onCancelItem(item, response, xhr.status, headers);\n            _this._onCompleteItem(item, response, xhr.status, headers);\n        };\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (var _i = 0, _a = this.options.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (var _b = 0, _c = item.headers; _b < _c.length; _b++) {\n                var header = _c[_b];\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        };\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then(function (result) { return xhr.send(JSON.stringify(result)); });\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    };\n    FileUploader.prototype._getTotalProgress = function (value) {\n        if (value === void 0) { value = 0; }\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        var notUploaded = this.getNotUploadedItems().length;\n        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        var ratio = 100 / this.queue.length;\n        var current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    };\n    FileUploader.prototype._getFilters = function (filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            var names_1 = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter(function (filter) { return names_1.indexOf(filter.name) !== -1; });\n        }\n        return this.options.filters;\n    };\n    FileUploader.prototype._render = function () {\n        return void 0;\n    };\n    FileUploader.prototype._queueLimitFilter = function () {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    };\n    FileUploader.prototype._isValidFile = function (file, filters, options) {\n        var _this = this;\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every(function (filter) {\n            _this._failFilterIndex++;\n            return filter.fn.call(_this, file, options);\n        });\n    };\n    FileUploader.prototype._isSuccessCode = function (status) {\n        return (status >= 200 && status < 300) || status === 304;\n    };\n    FileUploader.prototype._transformResponse = function (response, headers) {\n        return response;\n    };\n    FileUploader.prototype._parseHeaders = function (headers) {\n        var parsed = {};\n        var key;\n        var val;\n        var i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map(function (line) {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        });\n        return parsed;\n    };\n    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    };\n    FileUploader.prototype._onAfterAddingFile = function (item) {\n        this.onAfterAddingFile(item);\n    };\n    FileUploader.prototype._onAfterAddingAll = function (items) {\n        this.onAfterAddingAll(items);\n    };\n    FileUploader.prototype._onBeforeUploadItem = function (item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    };\n    FileUploader.prototype._onBuildItemForm = function (item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    };\n    FileUploader.prototype._onProgressItem = function (item, progress) {\n        var total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    };\n    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    };\n    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    };\n    return FileUploader;\n}());\nexports.FileUploader = FileUploader;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./file-upload/file-select.directive\"));\n__export(require(\"./file-upload/file-drop.directive\"));\n__export(require(\"./file-upload/file-uploader.class\"));\n__export(require(\"./file-upload/file-item.class\"));\n__export(require(\"./file-upload/file-like-object.class\"));\nvar file_upload_module_1 = require(\"./file-upload/file-upload.module\");\nexports.FileUploadModule = file_upload_module_1.FileUploadModule;\n","<p>\n  album-upload works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-album-upload',\n  templateUrl: './album-upload.component.html',\n  styleUrls: ['./album-upload.component.scss']\n})\nexport class AlbumUploadComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"desc\">\n        <h4>Add New Release(Single)</h4>\n        <nav aria-label=\"breadcrumb\">\n            <ol class=\"breadcrumb\">\n                <li class=\"breadcrumb-item\"><a href=\"#\">Dashboard</a></li>\n                <li class=\"breadcrumb-item\"><a href=\"#\">Releases</a></li>\n                <li class=\"breadcrumb-item active\" aria-current=\"page\">Single</li>\n            </ol>\n        </nav>\n    </div>\n    <mat-horizontal-stepper style=\"color: black\">\n        <!--Main Information-->\n        <mat-step [stepControl]=\"mainInfoForm\" label=\"Main Information\">\n            <form [formGroup]=\"mainInfoForm\" (ngSubmit)=\"onSubmitMainInfoForm()\">\n                <mat-grid-list cols=\"2\" rowHeight=\"100px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"songTitle\" placeholder=\"Song Title\" required>\n                                <mat-error *ngIf=\"!mainInfoForm.get('songTitle').valid && mainInfoForm.get('songTitle').touched\">Song title is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"artistName\" placeholder=\"Artist Name\" required>\n                            </mat-form-field>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <h5>Is this song composed by several artists?</h5>\n                <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <div class=\"add-bottom-padding\">\n                                <mat-radio-group formControlName=\"hasSeveralArtists\">\n                                    <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                                    <mat-radio-button [value]=\"false\" checked>No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n\n                <div *ngIf=\"mainInfoForm.controls['hasSeveralArtists'].value === true\">\n                    <h5>Add the other artist's names(ONE PER FIELD)</h5>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"addOtherArtistsButtonClick()\">Add Artist</button>\n                    <div formArrayName=\"otherArtists\" *ngFor=\"let otherArtist of mainInfoForm.get('otherArtists')['controls']; let i = index\">\n                        <mat-grid-list cols=\"2\" rowHeight=\"100px\">\n                            <div [formGroupName]=\"i\">\n                                <mat-grid-tile>\n                                    <div class=\"controls-container\">\n                                        <mat-form-field floatLabel=\"always\" appearance=\"fill\">\n                                            <mat-label>Artist's name</mat-label>\n                                            <input type=\"text\" formControlName=\"name\" matInput placeholder=\"Add artist's name\">\n                                        </mat-form-field>\n                                    </div>\n                                </mat-grid-tile>\n                                <mat-grid-tile>\n                                    <div class=\"controls-container\">\n                                        <mat-form-field floatLabel=\"always\" appearance=\"fill\">\n                                            <mat-label>Role</mat-label>\n                                            <mat-select matInput formControlName=\"role\" placeholder=\"Choose Role\" required>\n                                                <mat-option [value]=\"'Featuring'\">Featuring</mat-option>\n                                                <mat-option [value]=\"'In Collaboration'\">In Collaboration</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                </mat-grid-tile>\n                            </div>\n                        </mat-grid-list>\n                    </div>\n                </div>\n                <h5>Is this song previously released?</h5>\n                <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <div class=\"add-bottom-padding\">\n                                <mat-radio-group formControlName=\"isPreviouslyReleased\">\n                                    <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                                    <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <h5>Is this song on a record label?</h5>\n                <mat-grid-list cols=\"1\" rowHeight=\"100px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <div class=\"add-bottom-padding\">\n                                <mat-radio-group formControlName=\"isOnrecordLabel\">\n                                    <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                                    <mat-radio-button [value]=\"false\">No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <div class=\"button-row\">\n                    <button mat-button matStepperNext [disabled]=\"!mainInfoForm.valid\" type=\"submit\">Next</button>\n                </div>\n            </form>\n        </mat-step>\n        <!--Upload Track-->\n        <mat-step [stepControl]=\"uploadTrackForm\" label=\"Upload Track\">\n            <form [formGroup]=\"uploadTrackForm\" (ngSubmit)=\"onUploadSongFile()\">\n                <mat-grid-list cols=\"3\" rowHeight=\"100px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container \">\n                            <mat-form-field>\n                                <mat-select [formControlName]=\"genre\" matInput placeholder=\"Choose Genre\" required>\n                                    <mat-option value=\"Gospel\">Gospel</mat-option>\n                                    <mat-option value=\"Hip Hop\">Hip Hop</mat-option>\n                                    <mat-option value=\"Reggae\">Reggae</mat-option>\n                                    <mat-option value=\"Rhumba\">Rhumba</mat-option>\n                                    <mat-option value=\"Rap\">Rap</mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"!uploadTrackForm.get( 'genre').valid && uploadTrackForm.get( 'genre').touched\">Song title is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"lyricsLanguage\" placeholder=\"Language of Lyrics\" required>\n                            </mat-form-field>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <mat-form-field>\n                                <input type=\"text\" matInput formControlName=\"uploadLyrics\" placeholder=\"Upload Lyrics\">\n                            </mat-form-field>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <h5>Upload Song Art/Cover</h5>\n                <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n                    <mat-grid-tile>\n                        <!-- <div class=\"controls-container\">\n                            <label id=\"imageFieldLabel\" for=\"imageField\">\n                <img [src]=\"imageFile || uploadPreviewUrl\" height=\"200\" width=\"200\" /></label>\n                            <input type=\"file\" name=\"songCover\" ng2FileSelect [uploader]=\"albumArtUploader\" (change)=\"onImageSelected($event)\" id=\"imageField\" #imageField>\n                            <div *ngFor=\"let item of albumArtUploader.queue\">\n                                <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%'}\" attr.aria-valuenow=\"{{imageUploadProgress}}\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                    {{imageUploadProgress}} Progress\n                                    <button (click)=\"item.upload()\" type=\"button\">Upload</button>\n                                </div>\n                            </div>\n                        </div> -->\n                        <div class=\"controls-container\">\n                            <label id=\"imageFieldLabel\" for=\"imageField\">\n                <img [src]=\"imageFile || uploadPreviewUrl\" height=\"200\" width=\"200\" /></label>\n                            <input type=\"file\" name=\"songCover\" (change)=\"onImageSelected($event)\" id=\"imageField\" #imageField>\n                            <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': imageUploadValue + '%'}\" attr.aria-valuenow=\"{{imageUploadProgress}}\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                {{imageUploadProgress}} Progress\n                                <button (click)=\"resetImageFieldInput()\" type=\"button\">Cancel</button>\n                            </div>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <h4>Please observe the following rules while uploading cover image</h4>\n                            <ul>\n                                <li>File format: PNG, GIF, BMP, TIF, JPG or JPEG</li>\n                                <li>Minimum dimensions: 1400x1400 pixels. Recommended: 3000x3000 pixels.</li>\n                                <li>Images may not be larger than 16 Mb.</li>\n                                <li>The information on your cover art should match your album title and artist name.</li>\n                                <li>You may not use a third-party logo or trademark without the express written permission from the trademark holder.</li>\n                            </ul>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <h5>Upload Audio File</h5>\n                <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <label id=\"audioFieldLabel\" for=\"audioField\">\n                <img [src]=\"audioFile || uploadPreviewUrl\" height=\"200\" width=\"200\" />\n              </label>\n                            <input type=\"file\" name=\"audioFile\" (change)=\"onAudioSelected($event)\" id=\"audioField\" #audioField>\n                            <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': audioUploadValue + '%'}\" attr.aria-valuenow=\"{{audioUploadProgress}}\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                                {{audioUploadProgress}} Progress\n                                <button (click)=\"resetAudioFieldInput($event)\" type=\"button\">Cancel</button>\n                            </div>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <h4>Please observe the following rules while uploading cover image</h4>\n                            <ul>\n                                <li>File format: PNG, GIF, BMP, TIF, JPG or JPEG</li>\n                                <li>Minimum dimensions: 1400x1400 pixels. Recommended: 3000x3000 pixels.</li>\n                                <li>Images may not be larger than 16 Mb.</li>\n                                <li>The information on your cover art should match your album title and artist name.</li>\n                                <li>You may not use a third-party logo or trademark without the express written permission from the trademark holder.</li>\n                            </ul>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <mat-grid-list cols=\"4\" rowHeight=\"100px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <p>Song Title</p>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <p>Genre</p>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <p>Author</p>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <p>Audio Present</p>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <div class=\"button-row\">\n                    <button mat-button matStepperNext [disabled]=\"!uploadTrackForm.valid && audioUploadValue !== 100\" type=\"submit\">Next</button>\n                </div>\n            </form>\n        </mat-step>\n        <!-- Publishing -->\n        <mat-step label=\"Publishing\">\n            <form [formGroup]=\"publishForm\" (ngSubmit)=\"onSubmitPublishForm()\">\n                <h5>Producer's Details</h5>\n                <mat-grid-list cols=\"3\" rowHeight=\"100px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <mat-form-field>\n                                <input type=\"text\" formControlName=\"firstName\" matInput placeholder=\"Enter first name\">\n                            </mat-form-field>\n                        </div>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <mat-form-field>\n                            <input type=\"text\" formControlName=\"lastName\" matInput placeholder=\"Enter last name\">\n                        </mat-form-field>\n                    </mat-grid-tile>\n                    <mat-grid-tile>\n                        <mat-form-field>\n                            <input type=\"text\" formControlName=\"phoneNumber\" matInput placeholder=\"Enter phone number\">\n                        </mat-form-field>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <mat-grid-list cols=\"1\" rowHeight=\"350px\">\n                    <mat-grid-tile>\n                        <div class=\"controls-container\">\n                            <div class=\"add-bottom-padding\">\n                                <mat-card-content>\n                                    <h5>Select where you want to distribute your music</h5>\n                                    <div *ngFor=\"let control of platformsArray.controls; let i = index;\">\n                                        <mat-checkbox [formControl]=\"control\" (change)=\"getSelectedPlatforms()\">{{platforms[i].name}}\n                                        </mat-checkbox>\n                                    </div>\n                                    <mat-error style=\"color: red;\" *ngIf=\"platformsCheckboxError && checkPlatformsControlsTouched()\">\n                                        Choose at least one platform</mat-error>\n                                </mat-card-content>\n                            </div>\n                        </div>\n                    </mat-grid-tile>\n                </mat-grid-list>\n                <div class=\"button-row\">\n                    <button mat-button matStepperNext [disabled]=\"!publishForm.valid\" type=\"submit\">Submit</button>\n                </div>\n            </form>\n        </mat-step>\n    </mat-horizontal-stepper>\n    <!-- <div class=\"container \">\n        <form [formGroup]=\"uploadForm \" *ngIf=\"category==='song' \">\n            <div class=\"form-group \">\n                <label>Song Title</label>\n                <input type=\"text \" formControlName=\"title \" class=\"form-control \" placeholder=\"Enter song title... \">\n            </div>\n            <div class=\"form-group \">\n                <label>Genre</label>\n                <select formControlName=\"genre \" class=\"form-control \">\n          <option>Select Genre</option>\n          <option>Gospel</option>\n          <option>Hip Hop</option>\n          <option>Reggae</option>\n          <option>Rhumba</option>\n          <option>Rap</option>\n        </select>\n            </div>\n            <div class=\"form-group \">\n                <label>Song Cover</label>\n                <input type=\"file \" name=\"songCover \" (change)=\"onImageSelected($event) \" class=\"form-control-file \">\n                <div *ngIf=\"imageUploadValue \" class=\"progress \">\n                    <div class=\"progress-bar \" role=\"progressbar \" [ngStyle]=\"{ 'width': imageUploadValue + '%'} \" attr.aria-valuenow=\"{{imageUploadProgress}} \" aria-valuemin=\"0 \" aria-valuemax=\"100 \">{{imageUploadProgress}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-group \">\n                <label>Upload Song</label>\n                <input type=\"file \" name=\"song \" (change)=\"onAudioSelected($event) \" class=\"form-control-file \">\n                <div *ngIf=\"audioUploadValue \" class=\"progress \">\n                    <div class=\"progress-bar \" role=\"progressbar \" [ngStyle]=\"{ 'width': audioUploadValue + '%'} \" attr.aria-valuenow=\"{{audioUploadProgress}} \" aria-valuemin=\"0 \" aria-valuemax=\"100 \">{{audioUploadProgress}}\n                    </div>\n                </div>\n            </div>\n            <button type=\"submit \" class=\"btn btn-primary \" (click)=\"onUploadSongFile() \"><i class=\"fa fa-send-o \"\n          aria-hidden=\"true \"></i>\n        Submit</button>&nbsp;\n            <button type=\"button \" class=\"btn btn-danger \"><i class=\"fa fa-times-circle \" aria-hidden=\"true \"></i>\n        Cancel</button>\n        </form>\n        <form *ngIf=\"category==='album' \">\n            <div class=\"form-group \">\n                <label for=\"exampleFormControlInput1 \">Album Title</label>\n                <input type=\"email \" class=\"form-control \" placeholder=\"Enter album title... \">\n            </div>\n            <div class=\"form-group \">\n                <label>Genre</label>\n                <select class=\"form-control \">\n          <option>Select Genre</option>\n          <option>Gospel</option>\n          <option>Hip Hop</option>\n          <option>Reggae</option>\n          <option>Rhumba</option>\n          <option>Rap</option>\n        </select>\n            </div>\n            <div class=\"form-group \">\n                <label>Album Cover</label>\n                <input type=\"file \" class=\"form-control-file \"> \n                <div class=\"progress \">\n                    <div class=\"progress-bar \" role=\"progressbar \" style=\"width: 25%; \" aria-valuenow=\"25 \" aria-valuemin=\"0 \" aria-valuemax=\"100 \">25%</div>\n                </div>\n            </div>\n            <div class=\"form-group \">\n                <label>Upload Album</label>\n                <input type=\"file \" class=\"form-control-file \">\n                <div class=\"progress \">\n                    <div class=\"progress-bar \" role=\"progressbar \" style=\"width: 25%; \" aria-valuenow=\"25 \" aria-valuemin=\"0 \" aria-valuemax=\"100 \">25%</div>\n                </div>\n            </div>\n            <button type=\"submit \" class=\"btn btn-primary \"><i class=\"fa fa-send-o \" aria-hidden=\"true \"></i>\n        Submit</button>&nbsp;\n            <button type=\"button \" class=\"btn btn-danger \"><i class=\"fa fa-times-circle \" aria-hidden=\"true \"></i>\n        Cancel</button>\n        </form>\n        <section>\n            <h3>Attachments</h3>\n            <div class=\"row \">\n                <div class=\"col-lg-3 col-md-6 col-sm-12 \">\n                    <div class=\"card \" *ngIf=\"imageFile \">\n                        <h4>Image</h4>\n                        <img class=\"card-img \" [src]=\"imageFile \" alt=\"Artist 's Image\">\n                    </div>\n                </div>\n                <div class=\"col-lg-3 col-md-6 col-sm-12\" *ngIf=\"audioFile\">\n                    <div>\n                        <h4>Audio File</h4>\n                        <audio controls>\n              <source [src]=\"audioFile\" type=\"audio/mpeg\">\n              Your browser does not support the audio tag.\n            </audio>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div> -->","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, Validators, FormControl, FormArray, FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n// ng2-upload imports\nimport { FileSelectDirective, FileUploader } from 'ng2-file-upload';\n\n// Local imports\nimport { UploadsService } from '../../../services/uploads.service';\nimport { DistributionPlatforms } from './../upload-platforms/distribution-platforms';\nimport { environment } from './../../../../environments/environment';\n\nexport function requiredFileType(type: string) {\n  return (control: FormControl) => {\n    const file = control.value;\n    if (file) {\n      const extension = file.name.split('.')[1].toLowerCase();\n      if (type.toLowerCase() !== extension.toLowerCase()) {\n        return {\n          requiredFileType: true\n        };\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n}\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './single-upload.component.html',\n  styleUrls: ['./single-upload.component.scss']\n})\nexport class SingleUploadComponent implements OnInit {\n  @ViewChild('imageField') imageFieldInput: ElementRef;\n  @ViewChild('audioField') audioFieldInput: ElementRef;\n\n  title = 'title';\n  genre = 'genre';\n  artistId;\n\n  uploadPreviewUrl = '../../assets/img/avatars/Upload.svg';\n  uploadAudioPreviewUrl = '../../assets/img/avatars/audio.svg';\n\n  selectedImage: File = null;\n  selectedAudio: File = null;\n\n  imageFile = null;\n  audioFile = null;\n\n  imageSuccessMessage = null;\n  audioSuccessMessage = null;\n\n  imageUploadProgress;\n  audioUploadProgress;\n  audioUploadValue;\n  imageUploadValue;\n\n  mainSongData;\n  newSongId;\n\n  platforms: Array<object> = DistributionPlatforms;\n  selectedPlatforms = [];\n  platformsCheckboxError = true;\n\n  mainInfoForm: FormGroup;\n  uploadTrackForm: FormGroup;\n  publishForm: FormGroup;\n  uploadResponse = { status: '', message: '', filePath: '' };\n\n  // ng2-upload properties\n  albumArtUri = `${environment.base_url}song/albumArt/`;\n  audioUri = `${environment.base_url}song/audioFile/songId`;\n  attachmentList: any = [];\n\n  albumArtUploader: FileUploader;\n\n  constructor(\n    private router: Router,\n    private fb: FormBuilder,\n    private uploadService: UploadsService,\n    private http: HttpClient) {\n    this.uploadAlbumArt();\n  }\n\n  ngOnInit() {\n    this.loadArtistId();\n    this.createMainInfoForm();\n    this.createUploadTrackForm();\n    this.createPublishForm();\n  }\n\n  addOtherArtistsButtonClick(): void {\n    (this.mainInfoForm.get('otherArtists') as FormArray).push(this.addOtherArtistsFormgroup());\n  }\n  createMainInfoForm() {\n    this.mainInfoForm = new FormGroup({\n      songTitle: new FormControl(null, Validators.required),\n      artistName: new FormControl(null, Validators.required),\n      hasSeveralArtists: new FormControl(false),\n      otherArtists: this.fb.array([\n        this.addOtherArtistsFormgroup()\n      ]),\n      isPreviouslyReleased: new FormControl(false),\n      isOnrecordLabel: new FormControl(false)\n    });\n  }\n\n  createUploadTrackForm() {\n    this.uploadTrackForm = new FormGroup({\n      genre: new FormControl(null, Validators.required),\n      lyricsLanguage: new FormControl(null, Validators.required),\n      uploadLyrics: new FormControl(null)\n    });\n  }\n  createPublishForm() {\n    this.publishForm = new FormGroup({\n      firstName: new FormControl(null, Validators.required),\n      lastName: new FormControl(null, Validators.required),\n      phoneNumber: new FormControl(null, Validators.required),\n      distributionPlatforms: this.addDistributionPlatformsControls()\n    });\n  }\n  addDistributionPlatformsControls() {\n    const arr = this.platforms.map(element => {\n      return this.fb.control(false);\n    });\n    return this.fb.array(arr);\n  }\n  get platformsArray() {\n    return this.publishForm.get('distributionPlatforms') as FormArray;\n  }\n  getSelectedPlatforms() {\n    this.selectedPlatforms = [];\n    this.platformsArray.controls.forEach((control, i) => {\n      if (control.value) {\n        this.selectedPlatforms.push(this.platforms[i]);\n      }\n    });\n    this.platformsCheckboxError = this.selectedPlatforms.length > 0 ? false : true;\n  }\n  checkPlatformsControlsTouched() {\n    let flag = false;\n    this.platformsArray.controls.forEach(element => {\n      if (element.touched) {\n        flag = true;\n      }\n    });\n    return flag;\n  }\n  onSubmitPublishForm() {\n    const publisherInfo = {\n      firstName: this.publishForm.controls['firstName'].value,\n      lastName: this.publishForm.controls['lastName'].value,\n      phoneNumber: this.publishForm.controls['phoneNumber'].value\n    };\n    const newItem = this.selectedPlatforms;\n    if (this.publishForm.valid && !this.platformsCheckboxError) {\n      // console.log(...this.publishForm.controls['distributionPlatforms'].value, newItem);\n      console.log(this.selectedPlatforms);\n    }\n    console.log(this.publishForm);\n  }\n\n  addPlatformsGroup(): FormGroup {\n    return this.fb.group({\n      name: new FormControl(null),\n      link: new FormControl(null)\n    });\n  }\n\n  addOtherArtistsFormgroup(): FormGroup {\n    return this.fb.group({\n      name: new FormControl(null),\n      role: new FormControl(null)\n    });\n  }\n\n\n  onSubmitMainInfoForm() {\n    const mainInfoData = {\n      title: this.mainInfoForm.controls['songTitle'].value,\n      artistName: this.mainInfoForm.controls['artistName'].value,\n      hasSeveralArtists: this.mainInfoForm.controls['hasSeveralArtists'].value,\n      artistNames: this.mainInfoForm.controls['otherArtists'].value,\n      previouslyReleased: this.mainInfoForm.controls['isPreviouslyReleased'].value,\n      onRecordLabel: this.mainInfoForm.controls['isOnrecordLabel'].value,\n    };\n    this.uploadService.uploadSongData(mainInfoData).subscribe(data => {\n      console.log(data);\n      this.newSongId = data['_id'];\n      console.log(this.newSongId);\n    });\n  }\n\n  uploadAlbumArt() {\n    this.albumArtUploader = new FileUploader({ url: this.albumArtUri + '5d88bd88c6b7901b6c13982c' });\n    this.albumArtUploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      this.attachmentList.push(JSON.parse(response));\n    };\n\n  }\n\n  onImageSelected(event) {\n    this.selectedImage = event.target.files[0] as File;\n    const filereader = new FileReader();\n    filereader.readAsDataURL(this.selectedImage);\n    filereader.onload = () => {\n      this.imageFile = filereader.result;\n    };\n  }\n  onAudioSelected(event) {\n    this.selectedAudio = event.target.files[0] as File;\n    const filereader = new FileReader();\n    filereader.readAsDataURL(this.selectedAudio);\n    filereader.onload = () => {\n      this.audioFile = filereader.result;\n      document.querySelector('audio').load();\n    };\n  }\n  resetImageFieldInput() {\n    this.imageFieldInput.nativeElement.value = '';\n    this.imageFile = null;\n  }\n  resetAudioFieldInput(event) {\n    this.audioFieldInput.nativeElement.value = '';\n    this.audioFile = null;\n    this.selectedAudio = event.target.files[0].remove();\n  }\n\n\n  onUploadSongFile() {\n    const trackInfo = {\n      genre: this.uploadTrackForm.controls['genre'].value,\n      lyricsLanguage: this.uploadTrackForm.controls['lyricsLanguage'].value\n    };\n\n    const songForm = new FormData();\n    const imageForm = new FormData();\n\n    songForm.append('audioFile', this.selectedAudio);\n    imageForm.append('albumArt', this.selectedImage);\n\n    this.uploadService.uploadaudio(songForm, this.newSongId).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        console.log('Upload Progress: ' + (event.loaded / event.total * 100) + '%');\n        this.audioUploadProgress = 'Audio Upload Progress: ' + (event.loaded / event.total * 100).toFixed(2) + '%';\n        this.audioUploadValue = Math.round(event.loaded / event.total * 100);\n        if (this.audioUploadValue === 100) {\n          console.log('done');\n          // this.router.navigate(['/dashboard/']);\n        }\n      } else if (event.type === HttpEventType.Response) {\n        console.log(event);\n        this.audioSuccessMessage = event['success'];\n      }\n    });\n    this.uploadService.uploadAlbumArt(imageForm, this.newSongId).subscribe(event => {\n      if (event.type === HttpEventType.UploadProgress) {\n        console.log('Upload Progress: ' + (event.loaded / event.total * 100).toFixed(2) + '%');\n        this.imageUploadProgress = 'Image Upload Progress: ' + Math.round(event.loaded / event.total * 100) + '%';\n        this.imageUploadValue = Math.round(event.loaded / event.total * 100);\n      } else if (event.type === HttpEventType.Response) {\n        console.log(event);\n        this.imageSuccessMessage = event['success'];\n      }\n    });\n  }\n\n\n  loadArtistId() {\n    const { _id } = JSON.parse(localStorage.getItem('user'));\n    this.artistId = _id;\n  }\n\n}\n\n","export const DistributionPlatforms = [\n    { name: 'Spotify', link: 'https://www.spotify.com' },\n    { name: 'Deezer', link: 'https://www.deezer.com' },\n    { name: 'Pandora', link: 'https://www.pandora.com' },\n    { name: 'Itunes', link: 'https://www.apple.com' },\n    { name: 'JamboTunes', link: 'https://www.jambotunes.com' },\n    { name: 'Amazon', link: 'https://www.music.amazon.com' },\n    { name: 'Tidal', link: 'https://www.tidal.com' },\n];\n","<header>\n    <h5>Your music listings will appear here</h5>\n</header>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-album-details',\n  templateUrl: './album-details.component.html',\n  styleUrls: ['./album-details.component.scss']\n})\nexport class AlbumDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"preview-container\">\n    <div class=\"songs-container\">\n        <div class=\"title\">\n            <div class=\"actions\">\n                <h2>Albums <span class=\"count-span\">{{albums.length}}</span></h2>\n            </div>\n            <div class=\"actions\">\n                <a [routerLink]=\"'../music-upload/single'\" class=\"tool-tip\">+\n          <p style=\"color: white;\" class=\"tooltip-text\">Add New Album</p>\n        </a>\n\n            </div>\n        </div>\n        <div class=\"song active\" *ngFor=\"let album of albums; index as i;\" (click)=\"onSelectedAlbum(album)\">\n            <div class=\"cover\">\n                <img src=\"{{album.cover}}\">\n            </div>\n            <div class=\"count\">\n                <p>{{i + 1}}</p>\n            </div>\n            <div class=\"name\">\n                <p>{{album.name}}</p>\n            </div>\n            <div class=\"time\">\n                <p *ngIf=\"album.numberOfSongs; else zeroSongs\">Songs: {{album.numberOfSongs}}</p>\n                <ng-template #zeroSongs>\n                    <p>Songs: 0</p>\n                </ng-template>\n            </div>\n            <div class=\"action\">\n                <a routerLink=\"wamlambez\">...</a>\n            </div>\n        </div>\n    </div>\n    <div class=\"album-details\">\n        <div class=\"details-title\">\n            <h3>Album Songs <span *ngIf=\"selectedAlbum\" class=\"count-span\">{{selectedAlbum.songs.length}}</span></h3>\n            <a (click)=\"goToUpload()\" *ngIf=\"selectedAlbum\" class=\"tool-tip\">+\n        <p style=\"color: white;\" class=\"tooltip-text\">Add New Song</p>\n        <p style=\"color: white;\" *ngIf=\" selectedAlbum && selectedAlbum.songs.length === 5\" class=\"tooltip-text\">This\n          album is full</p>\n      </a>\n            <ng-template #noSelectedAlbum>Select an album to view it's songs below;</ng-template>\n        </div>\n        <div *ngIf=\"selectedAlbum; else noSelectedAlbum\">\n            <p> Album-name: {{selectedAlbum.name}}</p>\n            <div *ngIf=\"selectedAlbum.songs.length > 0; else noSongs\">\n                <div *ngFor=\"let song of selectedAlbum.songs index as i\">\n                    <div class=\"song-details\">\n                        <div class=\"numbering\">\n                            <p>{{i + 1}}</p>\n                        </div>\n                        <div class=\"title\">\n                            <small>Title</small>\n                            <p>{{song.title}}</p>\n                        </div>\n                        <div class=\"duration\">\n                            <small>Duration </small>\n                            <p>{{song.duration}}</p>\n                        </div>\n                        <div class=\"status\">\n                            <small>Status </small>\n                            <p>{{song.status}}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ng-template #noSongs>\n                <div style=\"color:white;\">\n                    This album has no songs yet\n                    <a [routerLink]=\"'../music-upload/single'\">Upload Song</a>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\n\n\nimport { Store, select } from '@ngrx/store';\n\n\nimport * as songsReducer from '../../../reducers/song.reducer';\nimport * as songsactions from '../../../actions/song.actions';\n\nimport * as albumsReducer from '../../../reducers/album.reducer';\nimport * as albumsactions from '../../../actions/album.actions';\n\nimport * as artistsReducer from '../../../reducers/artist.reducer';\nimport * as artistsactions from '../../../actions/artist.actions';\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { environment } from '../../../../environments/environment';\nimport { ArtistSongsService } from '../../../services/artist-songs.service';\nimport { Observable } from 'rxjs';\n\nimport * as fromRoot from '../../../app.state';\n\nimport { Album } from '../../../shared/models/album';\nimport { Song } from '../../../shared/models/song';\nimport { Platform } from '../../../shared/models/platforms';\nimport { Producer } from '../../../shared/models/producer';\nimport { Artist } from '../../../shared/models/artist';\n\n@Component({\n  selector: 'app-albums',\n  templateUrl: './albums.component.html',\n  styleUrls: ['./albums.component.scss']\n})\nexport class AlbumsComponent implements OnInit {\n  form: FormGroup;\n  albums$: Observable<Album[]>;\n  albumsloaderror$: Observable<string>;\n\n  albums = [\n    {\n      id: 1, name: 'Beetles',\n      numberOfSongs: 3,\n      cover: '../../assets/img/banner.jpg',\n      songs: [\n        { id: 1, title: 'younder', duration: 3.09, status: 'verified' },\n        { id: 2, title: 'Shaku shaku', duration: 4.09, status: 'pending' },\n        { id: 3, title: 'wamlambez', duration: 4.50, status: 'rejected' },\n      ]\n    },\n    {\n      id: 2, name: 'Players',\n      numberOfSongs: 5,\n      cover: '../../assets/img/blur-close-up-concert-164879.jpg',\n      songs: [\n        { id: 1, title: 'xyz', duration: 3.00, status: 'verified' },\n        { id: 2, title: 'Yankees', duration: 5.50, status: 'pending' },\n        { id: 3, title: 'The Bent', duration: 4.50, status: 'rejected' },\n        { id: 4, title: 'Yolo', duration: 4.70, status: 'verified' },\n        { id: 5, title: 'Shaker', duration: 5.70, status: 'verified' },\n      ]\n    },\n    {\n      id: 3, name: 'Muzica',\n      numberOfSongs: 0,\n      cover: '../../assets/img/audience-band-blur-1587927(1).jpg',\n      songs: []\n    }\n  ];\n  selectedAlbum;\n\n\n  constructor(\n    private store: Store<fromRoot.AppState>,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute) {\n    this.createForm();\n\n\n  }\n\n  ngOnInit() {\n\n    // this.store.dispatch(new albumsactions.LoadArtistAlbums());\n\n    // this.albums$ = this.store.pipe(select(albumsReducer.getAlbums));\n    // this.albumsloaderror$ = this.store.pipe(select(albumsReducer.getError));\n  }\n\n  onSelectedAlbum(album) {\n    this.selectedAlbum = album;\n  }\n\n  goToUpload() {\n    if (this.selectedAlbum.songs.length < 5) {\n      this.router.navigate(['../music-upload/single'], { relativeTo: this.route });\n    }\n  }\n\n\n  createForm() {\n    // title: string;\n    // genre: string;\n    // albumArt: string;\n    // artist: Artist;\n    // link: string;\n    // status: {\n    //   type: string,\n    //   default: 'unverified'\n    // };\n    this.form = this.formBuilder.group({\n\n      title: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(30),\n      ])],\n      genre: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(15),\n      ])],\n      link: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(15),\n      ])],\n      status: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(15),\n      ])],\n\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(10),\n      ])],\n\n\n\n    });\n\n  }\n\n\n\n  validateTitle(controls) {\n\n\n  }\n\n  validateDescription(controls) {\n\n\n  }\n\n  validateGenre(controls) {\n\n  }\n\n  newAlbum() {\n    var popup = document.getElementById('popup');\n    popup.style.display = \"flex\";\n\n  }\n\n  SaveAlbum() {\n\n\n    var popup = document.getElementById('popup');\n    popup.style.display = \"none\";\n\n  }\n\n  Cancel() {\n    var popup = document.getElementById('popup');\n    popup.style.display = \"none\";\n\n  }\n\n\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* ng2-upload module*/\nimport { FileUploadModule } from 'ng2-file-upload';\n\n/* Material Module */\nimport { CustomMaterialModule } from '../../shared/material-module/material-module';\n\n/* Local Imports */\n\nimport { VerifiedSinglesComponent } from './verified-singles/verified-singles.component';\nimport { SinglesComponent } from './singles/singles.component';\nimport { AlbumUploadComponent } from '../music-upload/album-upload/album-upload.component';\nimport { SingleUploadComponent } from '../music-upload/single-upload/single-upload.component';\nimport { AlbumDetailsComponent } from './album-details/album-details.component';\nimport { SongsDetailsComponent } from './songs-details/songs-details.component';\nimport { AlbumsComponent } from './albums/albums.component';\nimport { SongsComponent } from './songs/songs.component';\n\nconst routes: Routes = [\n  { path: '', component: AlbumsComponent },\n  { path: 'verified-singles', component: VerifiedSinglesComponent },\n  { path: 'singles', component: SongsComponent },\n  { path: 'singles/:songtitle', component: SongsDetailsComponent },\n  { path: 'albums', component: AlbumsComponent },\n  { path: 'songs', component: SongsComponent },\n  { path: 'albums/:albumtitle', component: AlbumDetailsComponent },\n  { path: 'music-upload/album', component: AlbumUploadComponent },\n  { path: 'music-upload/single', component: SingleUploadComponent }\n];\n\n@NgModule({\n  declarations: [\n    VerifiedSinglesComponent,\n    SinglesComponent,\n    SongsDetailsComponent,\n    AlbumsComponent,\n    SongsComponent,\n    AlbumDetailsComponent,\n    AlbumUploadComponent,\n    SingleUploadComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CustomMaterialModule,\n    FileUploadModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class MymusicModule { }\n","<p>\n  songs-details works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-songs-details',\n  templateUrl: './songs-details.component.html',\n  styleUrls: ['./songs-details.component.scss']\n})\nexport class SongsDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<!-- <div class=\"preview-container\">\n    <div class=\"songs-container\">\n        <div class=\"title\">\n            <div class=\"actions\">\n                <h2>Songs</h2>\n            </div>\n            <div class=\"actions\"><a (click)=\"newSong()\">+</a></div>\n        </div>\n        <div *ngFor=\"let song of songs; index as i\">\n            <div class=\"song\">\n                <div class=\"thumb\">\n                    <img [src]=\"song.albumArt\">\n                </div>\n                <div class=\"count\">\n                    <p>{{i + 1}}</p>\n                </div>\n                <div class=\"name\">\n                    <p>{{song.title}}</p>\n                </div>\n                <div class=\"time\">\n                    <p>3:45</p>\n                </div>\n                <div class=\"action\">\n                    <p>...</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n<div class=\"album-details\">\n    <div class=\"details-title\">\n        <h3>Singles <span *ngIf=\"songs\" class=\"count-span\">{{songs.length}}</span></h3>\n        <a [routerLink]=\"'../music-upload/single'\" style=\"font-size: 20px;\" id=\"addLink\" class=\"tool-tip\">+\n      <p style=\"color: white;\" class=\"tooltip-text\">Add New Single</p>\n    </a>\n        <ng-template #noSelectedAlbum>Select an album to view it's songs below;</ng-template>\n    </div>\n    <div *ngFor=\"let song of songs index as i\">\n        <div class=\"song-details\">\n            <div class=\"numbering\">\n                <p>{{i + 1}}</p>\n            </div>\n            <div class=\"cover\">\n                <img [src]=\"song.albumArt || defaultCover\">\n            </div>\n            <div class=\"title\">\n                <small>Title</small>\n                <p>{{song.title}}</p>\n            </div>\n            <div class=\"duration\">\n                <small>Duration </small>\n                <p>3.45</p>\n            </div>\n            <div class=\"status\">\n                <small>Status </small>\n                <p>{{song.status}}</p>\n            </div>\n        </div>\n    </div>\n    <ng-template #noSongs>\n        <div>\n            This album has no songs yet\n            <a [routerLink]=\"'../music-upload/single'\">Upload Song</a>\n        </div>\n    </ng-template>\n</div>\n\n<div class=\"modal\" id=\"popup\">\n    <div class=\"formClass\">\n\n\n        <div class=\"head\">\n            <h3>Upload New Song</h3>\n        </div>\n        <form [formGroup]=\"form\" (ngSubmit)=\"SaveAlbum()\">\n            <div class=\"form-group\">\n                <div [ngClass]=\"{'has-error': (form.controls.title.errors && form.controls.title.dirty), 'has-success': !form.controls.title.errors}\">\n                    <input formControlName=\"title\" type=\"text\" class=\"form-control\" placeholder=\"Enter Title\">\n                    <ul class=\"help-block\">\n                        <li *ngIf=\"form.controls.title.errors?.required && form.controls.title.dirty\">This field is required</li>\n                        <li *ngIf=\"(form.controls.title.errors?.minlength || form.controls.title.errors?.maxlength) && form.controls.title.dirty\">\n                            Minimum characters: 3, Maximum characters 15</li>\n                        <li *ngIf=\"form.controls.title.errors?.validateName && form.controls.title.dirty\">Title must not have special characters</li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div [ngClass]=\"{'has-error': (form.controls.genre.errors && form.controls.genre.dirty), 'has-success': !form.controls.genre.errors}\">\n                    <input formControlName=\"genre\" type=\"text\" class=\"form-control\" placeholder=\"Enter Genre\">\n                    <ul class=\"help-block\">\n                        <li *ngIf=\"form.controls.genre.errors?.required && form.controls.genre.dirty\">This field is required\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n\n            <div class=\"form-group\">\n                <div [ngClass]=\"{'has-error': (form.controls.description.errors && form.controls.description.dirty), 'has-success': !form.controls.description.errors}\">\n                    <textarea formControlName=\"description\" type=\"text\" class=\"form-control\" placeholder=\"Enter Description\"></textarea>\n                    <ul class=\"help-block\">\n                        <li *ngIf=\"form.controls.description.errors?.required && form.controls.description.dirty\">This field is required\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n\n\n\n            <div class=\"btn-class\">\n                <button (click)=\"Cancel()\">Cancel</button>\n                <button (click)=SaveAlbum()>Save</button>\n            </div>\n        </form>\n\n\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { environment } from '../../../../environments/environment';\nimport { ArtistSongsService } from '../../../services/artist-songs.service';\n\n@Component({\n  selector: 'app-songs',\n  templateUrl: './songs.component.html',\n  styleUrls: ['./songs.component.scss']\n})\nexport class SongsComponent implements OnInit {\n\n  id;\n  artistName;\n  songs;\n  defaultCover = '../../assets/images/band.jpg';\n\n  form: FormGroup;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient,\n    private artistSongsService: ArtistSongsService) {\n    this.createForm();\n\n  }\n\n  ngOnInit() {\n    this.getArtistSongs();\n  }\n\n  loadArtistId() {\n    const { _id } = JSON.parse(localStorage.getItem('user'));\n    this.id = _id;\n    const { name } = JSON.parse(localStorage.getItem('user'));\n    this.artistName = name;\n  }\n\n  getArtistSongs() {\n    this.artistSongsService.getArtistSongs(this.id).subscribe((songs) => {\n      this.songs = songs;\n    });\n    this.loadArtistId();\n    this.http.get(environment.base_url + 'song/artist/' + this.id).subscribe((songs: any[]) => {\n      this.songs = songs.reverse();\n    });\n  }\n  goToSelectedSong(songName) {\n    this.router.navigate(['/songs/' + songName]);\n    console.log('clicked');\n  }\n\n  createForm() {\n    this.form = this.formBuilder.group({\n\n      title: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(30),\n      ])],\n      genre: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(15),\n      ])],\n\n      description: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(10),\n      ])],\n\n\n\n    });\n\n  }\n\n\n\n  validateTitle(controls) {\n\n\n  }\n\n  validateDescription(controls) {\n\n\n  }\n\n  validateGenre(controls) {\n\n  }\n\n  newSong() {\n    var popup = document.getElementById('popup');\n    popup.style.display = \"flex\";\n\n  }\n\n  SaveAlbum() {\n\n\n    var popup = document.getElementById('popup');\n    popup.style.display = \"none\";\n\n  }\n\n  Cancel() {\n    var popup = document.getElementById('popup');\n    popup.style.display = \"none\";\n\n  }\n\n\n\n}\n","<p style=\"color: white;\">\n    verified-singles works!\n</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-verified-singles',\n  templateUrl: './verified-singles.component.html',\n  styleUrls: ['./verified-singles.component.scss']\n})\nexport class VerifiedSinglesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\nimport { map } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadsService {\n\n\n  constructor(private http: HttpClient) {\n\n\n  }\n  uploadSongData(songData) {\n    return this.http.post(environment.base_url + 'song/new', songData);\n  }\n  private getEventMessage(event: HttpEvent<any>, songData) {\n    switch (event.type) {\n      case HttpEventType.UploadProgress:\n        return this.fileUploadProgress(event);\n      case HttpEventType.Response:\n        return this.apiResponse(event);\n      default:\n        return `File \"${songData.get('song').name}\" surprising upload event: ${event.type}.`;\n    }\n  }\n  private fileUploadProgress(event) {\n    const percentDone = Math.round(100 * event.loaded / event.total);\n    return { status: 'progress', message: percentDone };\n  }\n  private apiResponse(event) {\n    return event.body;\n  }\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred.\n      console.log('An Error occurred: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      console.error(`Backend returned code ${error.status}, body is: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError('Something bad happened. Please try again later');\n  }\n\n  uploadaudio(file, id) {\n    return this.http.put(`${environment.base_url}song/audioFile/${id}`, file, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n  uploadAlbumArt(file, id) {\n    return this.http.put(`${environment.base_url}song/albumArt/${id}`, file, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n}\n"],"sourceRoot":""}